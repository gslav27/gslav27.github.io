/*
* {
  margin: 0;
  padding: 0;
} 
The code resets the default margin and padding values of all HTML elements.
*/ 

/*
* {
  box-sizing: border-box;
}
In this box model, the height and width of the box will remain fixed.
The border thickness and padding will be included entirely inside of the box
*/

/* Notes: 
The difference between display: none and visibility: hidden  -->
--> display: none will be completely removed from the web page. 
--> visibility: hidden will not be visible on the web page, but the space reserved for it will.
*/

/* a very common design pattern used to scale images and videos proportionally
.container {
  width: 50%;
  height: 200px;
  overflow: hidden;
}

.container img {
  max-width: 100%;
  height: auto;
  display: block;
}
If the image is larger than the container, 
the vertical portion of the image will overflow and will not display.
To swap this behavior, you can set max-height to 100% and width to auto
(essentially swapping the values).
*/

/* media queries
Two different ways for setting screen sizes:
1)
@media only screen and (min-width: 320px) and (max-width: 480px) {
    * ruleset for 320px - 480px *
}
2)
@media only screen and (min-width: 320px) { 
    * ruleset for 320px - 479px *
}
@media only screen and (min-width: 480px) { 
    * ruleset for > 480px *
}


If the screen resolution query is met, CSS will display high resolution images and other media
@media only screen and (min-resolution: 300dpi) {
    * CSS for high resolution screens *
}


The browser will require both media features to be true before it renders the CSS within the media query
@media only screen and (max-width: 480px) and (max-resolution: 150dpi) {
    * CSS ruleset *
}

The browser will require only one of the media features before it renders the CSS within the media query
@media only screen and (min-width: 480px), (orientation: landscape) {
    * CSS ruleset *
}
*/

body {
    padding: 0 20px;  /*defines a padding (space) between the text and the border*/
    font-family: Arial, sans-serif;
    font-size: 16px;
}

/*ul, li, li a, li a:hover makes top menu*/
ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
    overflow: hidden;
    background-color: #333333;
  }

li {
    float: left;
}

li a {
    display: block;
    color: white;
    text-align: center;
    padding: 16px;
    text-decoration: none;
}

li a:hover {
    background-color: #111111;
}

h1 {
    color: #26bb33;
    text-shadow: 2px 2px 0 #cccccc;
}

pre {
    padding: 10px;  /*defines a padding (space) between the text and the border*/
    font-size: 14px;
    line-height: 20px;
    background: #f5f5f5;
    border: 1px solid #cccccc;
    border-radius: 3px;
    margin: 60px; /* defines a margin (space) outside the  */
}

/* just na example for --> style="width:;height" */
img { 
    max-width:100%;height:auto; 
} /* end of example */

em {
    color: #618ad2;
}

#sizevw {
    font-size: 8vw; /*Responsive Text Size, means text size will follow the size of the window:*/
} 

#cite1link {
    text-decoration: none;  
}

#amberimglink {
    text-decoration: none;  
}

/* Dropdown Button */
.dropbtn {
    background-color: #4CAF50;
    color: white;
    padding: 16px; /*defines a padding (space) between the text and the border*/
    font-size: 16px;
    border: none;
}

/* The container <div> - needed to position the dropdown content */
.dropdown {
    position: relative;
    display: inline-block;
}

/* Dropdown Content (Hidden by Default) */
.dropdown-content {
    display: none;
    position: absolute;
    background-color: #f1f1f1;
    width: 100%;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1; /*place the dropdown in front of other elements*/
    overflow:auto; /*to enable scroll on small screens)*/
}

/* Links inside the dropdown */
.dropdown-content a {
    color: black;
    padding: 12px 16px;
    text-decoration: none;
    display: block;
}

/* Change color of dropdown links on hover */
.dropdown-content a:hover {background-color: #ddd}

/* Show the dropdown menu on hover */
.dropdown:hover .dropdown-content {
    display: block;
}

/* Change the background color of the dropdown button when the dropdown content is shown */
.dropdown:hover .dropbtn {
    background-color: #3e8e41;
}

.contactbtn {
  float: right;
}

.contactbtn a {
  cursor: pointer;
  margin-right: 30px;
  padding: 8px 18px;
  border: 1px solid #204156;
  position:relative;
}

.contactbtn a:active {
  top: 2px;
} /*to style an element only while it's being clicked.*/

/*#back-to-top, #back-to-top:hover, #back-to-top.show are test code for back-to-top button*/
#back-to-top {
    position: fixed;
    bottom: 40px;
    right: 40px;
    z-index: 9999;
    width: 31px;
    height: 32px;
    text-align: center;
    line-height: 30px;
    background: #f5f5f5;
    color: #444;
    cursor: pointer;
    border: 0;
    border-radius: 2px;
    text-decoration: none;
    transition: opacity 0.2s ease-out;
    background: url("../images/Back-to-home.png");
    opacity: 0;
}

#back-to-top:hover {
    background-position: 31px 0;
}

#back-to-top.show {
    opacity: 1;
}


iframe {
    border: none;
}

.mainforms {
  background-color: lightgreen;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  /*align-items: center;*/   

}
.forms {
  background-color: white;
  padding: 10px;
  margin: 20px;
  box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.5);
}

/*
.mainforms {
  background-color: lightgreen;
  display: grid;
  grid-template: repeat(3, 1fr)/repeat(4, 1fr);
  grid-auto-rows: 1fr;
  align-items: stretch;
  justify-content: center;
}

.forms {
  background-color: white;
  width: 80%;
  padding: 10px;
  margin: 20px; 
  box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.5);
}
*/

.googlemap {
  display: inline-block;
  margin: 20px;

}

/* css grid */
.grid {
  display: grid;
  border: 2px blue solid;
  height: 500px;
  width: 500px;
  grid-template: repeat(4, 1fr 2fr) / repeat(4, 3fr 2fr); /* is a shorthand for defining both grid-template-columns and grid-template-rows in one line*/
  grid-gap: 5px; /*puts blank space between rows and/or columns of the grid*/
}

.a {
  grid-row: 5 / span 2; /*makes elements span certain rows of the grid*/
  grid-column: 1 / span 2; /* makes elements span certain columns of the grid*/
  /* or "grid-area: 5 / 1 / span 2 / span 2 ;" which is a shorthand for both row&column*/
}

.b {
  grid-column: 2 / span 6;
  grid-row: 2 / span 3;
}

.c {
  grid-area: 6 / 8 / span 3 / span 1;
}    
    
.box {
  background-color: beige;
  color: black;
  border-radius: 5px;
  border: 2px dodgerblue solid;
}
/* css grid examples*/

.grideexamples {
    display: inline-block;
    min-width: 500px;
    margin: 20px;
} /*for examples stand inline*/

.container1 {
  display: grid;
  border: 1px darkgrey dashed;
  max-width: 700px;
  position: relative;
  margin: auto;
  grid-gap: 10px;
  grid-template-areas: "head head"
                       "nav nav" 
                       "info services"
                       "footer footer";
  grid-template-rows: 150px 80px 300px 80px;
  grid-template-columns: 1fr 3fr;
  /*justify-items:center; --means from left to right (start, center, end, streched)*/
  /*align-items: streched; --means from top to bottom (start, center, end, streched)*/
  justify-content: center;
}
.container1 header {
  grid-area: head;
  background-color: #090934;
  color: #fcba12;
} 

.container1 nav {
  grid-area: nav;
  background-color: #f7edd4;
  color: #090934;
} 

.info {
  grid-area: info;
  background-color: lightblue;
} 

.services {
  grid-area: services;
  background-color: #fcba12;
  color: #090934;
}

.container1 footer {
  grid-area: footer;
  background-color: #1414b8;
  color: #f7edd4;
}

.container1 h3 {
    text-align: center;
}

.container2 {
  display: grid;
  border: 1px darkgrey dashed;
  max-width: 700px;
  position: relative;
  margin: auto;
  grid-gap: 10px;
  grid-template: repeat(12, 1fr) / repeat(6, 1fr);
  /*grid-auto-rows: 200px; --specifies the height of implicitly added grid rows*/
  /*grid-auto-flow: column; --specifies in which direction implicit elements should be created (also "dense")*/
  /*justify-items: center; --means from left to right (start, center, end, streched)*/
  align-items: streched; /*--means from top to bottom (start, center, end, streched)*/
  justify-content: center;
}

.container2 header {
  grid-area: 1 / 1 / 3 / 7;
  background-color: #090934;
  color: #fcba12;
} 

.container2 nav {
  grid-area: 3 / 1 / 4 / 7;
  background-color: #f7edd4;
  color: #090934;
} 

.left {
  grid-area: 4 / 1 / 9 / 5;
  background-color: lightblue;
} 

.right {
  grid-area: 4 / 5 / 9 / 7;
  background-color: #fcba12;
  color: #090934;
}

.overlap {
  grid-area: 6 / 4 / 8 / 6;
  background-color: #fa3333;
  color: #090934;
  z-index: 10;
}

.container2 footer {
  grid-area: 9 / 1 / 13 / 7;
  background-image: url("../images/camelbackground.png");
  background-position: center; 
  background-repeat: no-repeat;
  background-size: cover; /*a background-image will scale proportionally*/
  color: #f7edd4;
}   

.container2 h3 {
    text-align: center;
}